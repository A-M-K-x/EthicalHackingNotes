name: Update Fork Users List

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
  schedule:
    # Run every Friday at 1:30 AM IST (which is 20:00 UTC the previous day)
    - cron: '0 20 * * 4'
    # Run every Tuesday at 1:30 AM IST (which is 20:00 UTC the previous day)
    - cron: '0 20 * * 1'

jobs:
  update-fork-list:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Fork Users and Update CSV
        id: generate
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Get current timestamp in IST
            const now = new Date();
            const istOffset = 5.5 * 60 * 60 * 1000; // IST is UTC+5:30
            const istTime = new Date(now.getTime() + istOffset);
            const lastUpdate = istTime.toISOString().replace('T', ' ').substring(0, 19) + ' IST';

            console.log('Fetching forks...');
            const allForks = await github.paginate(
              github.rest.repos.listForks,
              { owner, repo, per_page: 100 }
            );

            console.log(`Found ${allForks.length} forks`);

            const csvRows = ['Profile Name,Username,Repo Count,EthicalHacking-CHRIST Check,Last Update'];

            for (const fork of allForks) {
              try {
                console.log(`Processing fork: ${fork.owner.login}`);
                
                // Get user's public repositories
                const userRepos = await github.paginate(
                  github.rest.repos.listForUser,
                  { username: fork.owner.login, per_page: 100, type: 'public' }
                );

                const repoCount = userRepos.length;
                
                // Check if user has EthicalHacking-CHRIST repo
                const hasEthicalHackingRepo = userRepos.some(repo => 
                  repo.name === 'EthicalHacking-CHRIST'
                );

                const profileName = fork.owner.name || fork.owner.login;
                const username = fork.owner.login;
                const usernameWithLink = `https://github.com/${username}`;
                const ethicalHackingCheck = hasEthicalHackingRepo ? '✓' : '✗';

                csvRows.push(`"${profileName}","${usernameWithLink}",${repoCount},"${ethicalHackingCheck}","${lastUpdate}"`);
                
                // Add a small delay to avoid hitting rate limits
                await new Promise(resolve => setTimeout(resolve, 100));
                
              } catch (error) {
                console.error(`Error processing ${fork.owner.login}:`, error);
                // Add entry with error indicator
                const profileName = fork.owner.name || fork.owner.login;
                const username = fork.owner.login;
                const usernameWithLink = `https://github.com/${username}`;
                csvRows.push(`"${profileName}","${usernameWithLink}","Error","Error","${lastUpdate}"`);
              }
            }

            const csvContent = csvRows.join('\n');
            
            // Ensure .repo directory exists
            if (!fs.existsSync('.repo')) {
              fs.mkdirSync('.repo', { recursive: true });
            }
            
            fs.writeFileSync('.repo/fork-users.csv', csvContent);

            // Also create a summary markdown file
            const summaryContent = [
              '# Fork Users Summary',
              '',
              `**Total Forks:** ${allForks.length}`,
              `**Last Updated:** ${lastUpdate}`,
              '',
              '## Data Location',
              'Detailed fork user data is available in `.repo/fork-users.csv`',
              '',
              '## CSV Columns',
              '- **Profile Name**: User\'s display name or username',
              '- **Username**: GitHub username',
              '- **Repo Count**: Number of public repositories',
              '- **EthicalHacking-CHRIST Check**: ✓ if repo exists, ✗ if not',
              '- **Last Update**: Timestamp of last data update'
            ].join('\n');

            fs.writeFileSync('.repo/README.md', summaryContent);

      - name: Check for changes in .repo directory
        id: check_changes
        run: |
          git add .repo/
          if git diff --staged --quiet; then
            echo "No changes detected"
          else
            echo "changes_detected=true" >> $GITHUB_ENV
          fi

      - name: Commit and Push Changes if Fork List Updated
        if: env.changes_detected == 'true'
        run: |
          git config user.name "GitHub Action Bot"
          git config user.email "action@github.com"
          git add .repo/
          git commit -m "Update fork users data - $(date '+%Y-%m-%d %H:%M:%S IST')"
          git push
